<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="  
    http://www.springframework.org/schema/context  
    http://www.springframework.org/schema/context/spring-context-4.3.xsd  
    http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans-4.3.xsd  
    http://www.springframework.org/schema/tx  
    http://www.springframework.org/schema/tx/spring-tx-4.3.xsd  
    http://www.springframework.org/schema/jdbc  
    http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd  
    http://www.springframework.org/schema/cache  
    http://www.springframework.org/schema/cache/spring-cache-4.3.xsd  
    http://www.springframework.org/schema/aop  
    http://www.springframework.org/schema/aop/spring-aop-4.3.xsd  
    http://www.springframework.org/schema/util  
    http://www.springframework.org/schema/util/spring-util-4.3.xsd
    http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task-4.3.xsd">
     
 
	<!-- <bean class="com.ye.placeholder.EncryptPropertyPlaceholderConfigurer"
	    p:locations="classpath:*.properties"
		p:fileEncoding="utf-8"/> -->
		
		 <!-- 与上面的配置等价，下面的更容易理解 -->
 <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
 	<property name="locations"> <!-- PropertyPlaceholderConfigurer类中有个locations属性，接收的是一个数组，即我们可以在下面配好多个properties文件 -->
 		<!-- <array>
 			<value>classpath:conn.properties</value>
 		</array> -->
 		 <list>
                <value>classpath:*.properties</value>
         </list>
 	</property>
 </bean>


	<!-- 扫描包 -->
	<context:component-scan base-package="com.ye" >
	         <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>  
	</context:component-scan>
	
	

	<!-- 数据源 写 -->
	<!-- https://blog.csdn.net/qq_31384551/article/details/81022643?utm_source=blogxgwz1 -->
	 <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"   destroy-method="close">
        <property name="driverClassName" value="${driverClassName}"></property>
        <property name="jdbcUrl" value="${url}"></property>
        <property name="username" value="${username}"></property>
        <property name="password" value="${password}"></property>
        <property name="readOnly" value="false" />
        <property name="connectionTimeout" value="60000" />
        <property name="idleTimeout" value="600000" />
        <property name="maxLifetime" value="1800000" />
        <property name="maximumPoolSize" value="15" />
        <property name="minimumIdle" value="5"></property>
    </bean>



	<!-- 定义事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

    
   <!-- <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/> --> 
    
    
    
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 别名包 -->
		<property name="typeAliasesPackage" value="com.ye.pojo" />
		<!-- 定义数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:com/ye/mapper/*.xml"></property>
	</bean>
	
	
	<!-- 定义Mapper接口扫描器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描mapper包 -->
		<property name="basePackage" value="com.ye.dao"/>
	</bean>
    



 <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" read-only="false"/>
        </tx:attributes>
    </tx:advice>
    <!-- aop配置 -->
    <aop:config>
       	<aop:pointcut id="txPointcut" expression="execution(* com.ye.dao.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
    </aop:config> 


<aop:config proxy-target-class="true"/>


<!-- https://blog.csdn.net/verseboys/article/details/79898906 -->
 <!-- <aop:aspectj-autoproxy/> -->
 
<!--  <aop:config proxy-target-class="true"/> -->
 <!-- https://www.jianshu.com/p/538c58f6c9e1 -->
 
 
<!-- 定时任务 -->
<task:executor id="executor" pool-size="30" />
<task:scheduler id="scheduler" pool-size="40" />
<task:annotation-driven executor="executor"	scheduler="scheduler" />
	
</beans>
